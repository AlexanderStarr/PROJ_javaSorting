Below is the output of running the file 'sorting.java'.  The JVM in Eclipse ran out of available space when arrays of size 50,000,000 were used (this also occurred when an array of that size was entered into the original program supplied by the professor), but running from command line with increased heap space was able to handle these arrays.  The values listed were the average time to sort for each algorithm on the given array size (averaged over 10 trials, each algorithm using the same array each time).  The A, B, C, etc. indications refer to the implementations described in problems 3(a), 3(b), 3(c), 5(a), 5(b), etc.

From these trials, we can conclude that quicksort generally performs better than mergesort on random lists (presumably very disordered), and that of the modifications made, the only one that seems to increase performance is the use of insertsort for small subarrays during mergesort.  Finally, Arrays.sort appears to perform better than any of the algorithms we implemented.

Below here is the output of the program.

For an array size of 1000000:
Arrays.sort: 88 milliseconds
mergesort: 139 milliseconds
mergesortA: 117 milliseconds
mergesortB: 142 milliseconds
mergesortC: 141 milliseconds
quicksort: 90 milliseconds
quicksortA: 91 milliseconds
quicksortB: 93 milliseconds
quicksortC: 90 milliseconds
quicksortD: 92 milliseconds
quicksortE: 91 milliseconds
quicksortF: 89 milliseconds
For an array size of 10000000:
Arrays.sort: 717 milliseconds
mergesort: 1542 milliseconds
mergesortA: 1289 milliseconds
mergesortB: 1560 milliseconds
mergesortC: 1542 milliseconds
quicksort: 941 milliseconds
quicksortA: 936 milliseconds
quicksortB: 949 milliseconds
quicksortC: 949 milliseconds
quicksortD: 956 milliseconds
quicksortE: 942 milliseconds
quicksortF: 949 milliseconds
For an array size of 50000000:
Arrays.sort: 4435 milliseconds
mergesort: 8047 milliseconds
mergesortA: 6940 milliseconds
mergesortB: 8152 milliseconds
mergesortC: 8137 milliseconds
quicksort: 4859 milliseconds
quicksortA: 4853 milliseconds
quicksortB: 4838 milliseconds
quicksortC: 4911 milliseconds
quicksortD: 4911 milliseconds
quicksortE: 4854 milliseconds
quicksortF: 4846 milliseconds